# Smart Caching: Tell browsers how long to save different file types.
# This helps your site load faster for returning visitors.
# HTML: 'epoch' means don't save it, always get the newest version (good for app pages).
# JavaScript (JS) & CSS: Save for 1 day.
# Images: Save for 1 week.
map $sent_http_content_type $expires {
    "text/html"                 epoch;
    "text/html; charset=utf-8"  epoch;
    "application/javascript"    1d;  # 'd' stands for day
    "text/css"                  1d;
    "image/png"                 1w;  # 'w' stands for week
    "image/jpeg"                1w;
    "application/json"          off; # Don't let browsers save API answers by default
    default                     1h;  # Save other things for 1 hour
}

server {
    # Nginx will listen for connections on these ports:
    # Port 80 is for regular HTTP (we'll redirect this to HTTPS).
    # Port 443 is for secure HTTPS.
    listen *:80;
    listen [::]:80; # This is for IPv6 addresses
    listen *:443 ssl http2; # Enable SSL/TLS (for HTTPS) and HTTP/2 (for speed)
    listen [::]:443 ssl http2; # For IPv6

    # Your website's domain name(s)
    server_name example.com www.example.com;

    # SSL (HTTPS) Setup - For the secure lock icon!
    # IMPORTANT: Replace these with the actual paths to YOUR SSL certificate files.
    # I recommend using Let's Encrypt with Certbot to get free SSL certificates!
    ssl_certificate /path/to/your/ssl/example.com.crt;
    ssl_certificate_key /path/to/your/ssl/example.com.key;
    ssl_protocols TLSv1.3 TLSv1.2; # Use modern, secure SSL/TLS versions

    # Gzip Compression: Makes your website files smaller so they load faster!
    gzip on;
    # Tell Nginx what types of files to compress
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_proxied any;
    gzip_min_length 1000; # Don't compress very small files
    gzip_disable "msie6"; # Don't bother gzipping for very old Internet Explorer 6

    # How long Nginx should wait for your Nuxt app to respond or connect
    proxy_read_timeout 5m; # 5 minutes
    proxy_connect_timeout 5m; # 5 minutes
    proxy_set_header Connection ''; # Helps with keep-alive connections
    keepalive_timeout 10; # How long to keep connections open

    # Main folder for simple static files (like images, or special files).
    # For Nuxt, this is NOT where your main Nuxt app code lives.
    # It's often used for things like a '.well-known' folder for Let's Encrypt.
    root /path/to/your/app_public_folder; # Example: /var/www/example.com/public
    disable_symlinks if_not_owner from=$document_root; # Security setting

    # Redirect HTTP to HTTPS (Good for security and SEO)
    # This part says: if the connection is NOT HTTPS...
    # ...then send the visitor to the HTTPS version of the same page.
    # The (?!/\.well-known/acme-challenge)/ part makes an exception for Let's Encrypt renewal.
    if ($scheme != "https") {
        rewrite ^(?!/\.well-known/acme-challenge)/ https://$http_host$request_uri? permanent;
    }

    # Location for Let's Encrypt ACME challenge files (for getting/renewing SSL certs)
    # This tells Nginx where to find the special files Certbot uses to prove you own the domain.
    location ^~ /.well-known/acme-challenge/ {
        alias /path/to/your/app_public_folder/.well-known/acme-challenge/; # Or a dedicated Certbot webroot
        default_type "text/plain";
        try_files $uri =404; # If the file isn't found, show a 404 error
    }

    # Default files to look for if someone just types your domain (e.g., example.com/)
    # More relevant for static sites or PHP, not so much for Nuxt SSR.
    index index.html index.htm;

    # Custom Error Pages (Make your error pages look nice and be helpful!)
    error_page 400 /error_pages/400.html; # Bad Request
    error_page 401 /error_pages/401.html; # Unauthorized
    # ... (add more for other common errors like 403 - Forbidden)
    error_page 404 /error_pages/404.html; # Not Found
    error_page 500 502 503 504 /error_pages/50x.html; # Server errors
    recursive_error_pages on; # Important for custom error pages to work properly

    # Location for serving those custom error pages
    # These error pages are stored in a subfolder.
    location /error_pages/ {
        root /path/to/your/app_public_folder; # Or a dedicated error page directory
        internal; # Means only Nginx can access these files directly
    }

    # The MAGIC Part: Sending requests to your Nuxt App!
    # This 'location /' block means "for any request to your website..."
    location / {
        expires $expires; # Apply our cache settings from the 'map' block at the top

        proxy_redirect off;
        # These headers pass important info from the visitor to your Nuxt app
        proxy_set_header Host $host; # The original domain name requested
        proxy_set_header X-Real-IP $remote_addr; # The visitor's real IP address
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # List of IPs if behind multiple proxies
        proxy_set_header X-Forwarded-Proto $scheme; # Tells Nuxt if the original request was HTTP or HTTPS (important!)
        proxy_read_timeout 1m; # How long Nginx waits for Nuxt to send a response
        proxy_connect_timeout 1m; # How long Nginx waits to connect to Nuxt

        # This is where your Nuxt app is actually running.
        # Nginx will pass the request to this address and port.
        # MAKE SURE this port number (e.g., 3002) matches the port your Nuxt app is listening on!
        proxy_pass http://127.0.0.1:3002;
    }
}
